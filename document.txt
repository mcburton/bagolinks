
# My bag of links

because I don't really like bookmarks or, I've recently decided, I don't like bookmarking services linke pinboard, I'm going to use this to save links. Why this, I like the unstructuredness of a document.

## IPython Notebooks & Publishing HN discussion
[HN thread on first chapter of Mining the Social Web as IPython Notebook](https://news.ycombinator.com/item?id=6611848)  
some links Mathias put in the thread comments  
- [how to use nbconvert](http://nbviewer.ipython.org/urls/raw.github.com/Carreau/posts/master/06-NBconvert-Doc-Draft.ipynb)  
- [Github Issues thread about adding JATS support to nbconvert](https://github.com/ipython/ipython/issues/4119)  
- [IPython Notebooks & Github repository for Mathias's book *IPython In Depth*](https://github.com/ipython/ipython-in-depth) 


## autosaving changes from Chrome Developer Console
I was dorking around with derrida.js in the chome developer console when I was building [pomo.io](http://pomo.io) and I notice Chrome has a menu item to "save" changes to javascript (and HTML/CSS I presume). While it (obviously) doesn't appear you can save back to remote locations (without some server shit in place), you can save local files. I'll have to play with this more. [this blog post "Auto-saving CSS And JavaScript Changes Locally From The Chrome Developer Tools" has a video and more information.](http://addyosmani.com/blog/autosave-changes-chrome-dev-tools/)


## post-modern programming
when dreaming up [pomo.io](http://pomo.io) i was googling around for information about the post-modern web and post-modern programming. i found [this link with some thoughts/notes on what post modern programming should be.](http://martinfowler.com/bliki/PostModernProgramming.html)

## Scholarly Markdown
[Citations in Scholarly Markdown blog post with a **lot** of good discussion in the comments.](http://blog.martinfenner.org/2013/06/19/citations-in-scholarly-markdown/) That link has the best discussion about citations in markdown I've seen so far. Here is [another post from that same blog "What is Scholarly Markdown"](http://blog.martinfenner.org/2013/06/17/what-is-scholarly-markdown/) Also a [PLOSOne post about scholarly markdown, which I've just found but haven't read.](http://blogs.plos.org/mfenner/2012/12/13/a-call-for-scholarly-markdown/). 

[Github repository for the Scholarly Markdown project](https://github.com/scholmd/scholmd/wiki). I'm not sure where this is going and it doesn't look like it has been updated in a while.

[RTF/ODF-Scan for Zotero is a lightweight markup format for expressing zotero citations in ascii text. The scanner picks them up from teh document and replaces them with citations.](http://zotero-odf-scan.github.io/zotero-odf-scan/) I think Frank Bennet pointed this to me on twitter I was thinking about implementing this with my [Editorial](http://omz-software.com/editorial/) zotero workflow/plugin.


## A pile of machine learning links
[word2vec does soemthing to compute the distance between words in a corpus of text](https://code.google.com/p/word2vec/) it is being used by [ThisPlusThat.me](http://thisplusthat.me/) to do some cute Thing - trait + trait comparisons.

- [Machine Learning in Python TF-IDF Text Extraction Vector space models - Part 1](http://pyevolve.sourceforge.net/wordpress/?p=1589)
- [Machine Learning in Python TF-IDF Text Extraction Vector space models - Part 2](http://pyevolve.sourceforge.net/wordpress/?p=1747)
- [Machine Learning in Python TF-IDF Text Extraction Vector space models - Part 3: Cosine similarity for Vector Space models](http://pyevolve.sourceforge.net/wordpress/?p=2497)

[A programmer's guide to machine learning](http://guidetodatamining.com/)



## Mapping in Python
[So You'd Like To Make a Map Using Python](http://sensitivecities.com/so-youd-like-to-make-a-map-using-python-EN.html). SOme interesitng bits on making a Choropleth and other links to python mapping libraries. interesting alternative to using [d3js.org](http://d3js.org/).



## DH Blog Topic Model Topography project
[**Kriging** is a method to build an approximation of a function from a set of evaluations of the function at a finite set of points.](http://en.wikipedia.org/wiki/Kriging) I think I can use this technique to build a continuous topography of from the Digital Humanities blogs topic points.

[dfr-browser is a tool for visualizing and interacting with MALLET topic models](http://agoldst.github.io/dfr-browser/) built by [Andrew Goldstone](http://andrewgoldstone.com/) who collaborated with [Ted Underwood](http://tedunderwood.com) on the PMLA topic modeling thing.


## Topic Modeling

[BEAGLE model source code](http://www.indiana.edu/~clcl/BEAGLE/) is the source code link to a text model, not sure if it technically a topic model, from Indiana. I haven't looked into this much yet.

I need to look at the [CV of Ying Ding at Indiana](http://info.slis.indiana.edu/~dingying/publication.html). She has done a bunch of work using topic models and scholary communication (in science).

I dumped [a bunch of links into a subreddit on topic modeling](http://www.reddit.com/r/topicmodeling/) should extract those to here.

Adding a link to [my blog post on topic modeling, *The Joy of Topic Modeling*](http://mcburton.net/blog/joy-of-tm/) 

## Scholarly communication

Check out [Carol Palmer's CV](http://people.lis.illinois.edu/~clpalmer/pubspresB.html) She has done some interesting work on scientific scholarly communication.

I need to look at the [CV of Ying Ding at Indiana](http://info.slis.indiana.edu/~dingying/publication.html). She has done a bunch of work using topic models and scholary communication (in science).

[A very long post discussing the affordances of twitter as a medium for communication](http://www.danielallington.net/2013/08/twitter-conversations-reply-retweet/#sthash.rl8sQ4qa.dpbs), I think this is applicable to conversations around scholarly communication.

## Design

[Butterick's Practical Typography is a "web book" and crash course on typography for the web or in general.](http://practicaltypography.com/)

[Shape of Design Book is a nice little book on design. I bought the book, but should probably have a link to it here.](http://www.shapeofdesignbook.com/)

## Web writing
a pile of links loosely related to digital writing, the web, and whatever else I feel belongs in here.

[Open call for peer review of the Web writing book](http://chronicle.com/blogs/profhacker/call-for-open-peer-review-web-writing/52393)

[Writing on the web with Ginko, a horizontal writing and outlining tool](http://chronicle.com/blogs/profhacker/write-in-a-new-way-with-gingko/52975)

[HTML5 is the future of book authorship](http://programming.oreilly.com/2013/09/html5-is-the-future-of-book-authorship.html) This is a really interesting post and it links to a paper from the [Basliage markup conference that makes the argument for HTML5 books.](http://balisage.net/Proceedings/vol10/html/Kleinfeld01/BalisageVol10-Kleinfeld01.html) I need to read this, I think it is really interesting.

[Digital Dissertation deliverables and how to complete them! is a post by Amanda Visconti](http://www.literaturegeek.com/timeandscope/) 

### Web Writing Tools I (may or may not) have tried
- [Penflip a web-based, git backed writing tool/site. HOsted in the cloud with git as API protocol.](http://www.penflip.com)
- [Draft like penflip but more features, not backed by git. HOsted in the cloud as service.](https://draftin.com/)
- [Prose.io is a writers frontend to github. Hosted front-end, backed in github.](http://prose.io/)
- [Ghost is a neo-wordpress blogging platform. Self-hosted or will be cloud service.](http://tryghost)
- [Substance.io a semantically rich writing tool, being kinda-developed. Hosted in the cloud.](http://substance.io/#substance) The developers have some [interesting things in github.](https://github.com/substance)
- [Editorially a tool for collaborative writing. Looks to be hosted in the cloud.](https://editorially.com/)
- [Markdown editor for scientific writing. -- Not sure if this is still being actively developed. Hosted locally or in cloud.](https://github.com/yoavram/markx)
- [Medium is one of these, but not like the others. I'm not sure why it is different, it is a tool, but also a lot of content.](http://medium.com)
- [Quip is a cross-channel (desktop, tablet, phone) writing app. I didn't like it very much.](https://quip.com/)
- 


## GIT
a pile of links related to GIT 

[Git concepts simplified.](http://gitolite.com/gcs/index.html) This post is similar to the class post I really liked, [git for computer scientists](http://eagain.net/articles/git-for-computer-scientists/), but it is intended for a broader audience.




